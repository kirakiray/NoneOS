!function(){"use strict";const e={pathEmpty:"文件路径不能为空",indexErr:"在数据库{dbname}的{storename}表中没有找到索引{key}",setDataErr:"设置数据出错",findDataErr:"查找数据出错",getDataErr:"获取数据出错",rootEmpty:"不允许使用 '/' 开头的路径",rootNotExist:"根目录 {rootname} 不存在",pathNotFound:"未找到文件夹:{path}",storeNotExistMethod:"store中不存在方法 {method}",invalidCreateType:"create必须等于'file'或'dir'",notDeleteRoot:"不能直接删除根节点{name}",deleted:"当前handle已被删除，不能使用{name}；旧地址为:{path}",exitedName:"操作失败，{name}已经存在",tolowcase:"文件系统对大小写不敏感，{oldName}将会被转为{newName}",writefile:"写入文件内容失败:{path}",noPicker:"当前浏览器不支持文件选择",targetAnotherType:"{path} 已经是一个'{exitedType}'，不能创建为'{targetType}'",notMoveToChild:"{targetPath} 是 {path} 的子目录，不能移动到自己的子目录",notFoundChunk:"{path}文件没有找到对应的块文件:{hash}",pathInvalid:"路径不能包含特殊字符 {path}",getHashErr:"获取hash出错:{path}",copyNoFile:"复制文件到目标目录失败:{path} (次数：{count})"},t=(t,a,n)=>{let s,r=e[t];if(a)for(let e in a)r=r.replace(new RegExp(`{${e}}`,"g"),a[e]);return s=n?new Error(r,{cause:n}):new Error(r),s.code=t,s},a={};function n(e=10){const t=new Uint8Array(e);return crypto.getRandomValues(t),Array.from(t,(e=>("0"+e.toString(32)).slice(-2))).join("")}const s=async(e="noneos_fs_defaults")=>(a[e]||(a[e]=new Promise((t=>{const n=indexedDB.open(e);n.onsuccess=async n=>{const s=n.target.result;s.onclose=()=>{a[e]=null},t(s)},n.onupgradeneeded=e=>{const t=e.target.result,a=t.createObjectStore("main",{keyPath:"key"});a.createIndex("parent","parent",{unique:!1}),a.createIndex("parent_and_name",["parent","name"],{unique:!0}),a.createIndex("hash","hash",{unique:!1}),t.createObjectStore("blocks",{keyPath:"hash"})},n.onerror=t=>{throw new Event(e+" creation error",{cause:t.error})}}))),a[e]),r=async({dbname:e="noneos_fs_defaults",storename:a="main",index:n,all:r=!1,method:i="get",key:o})=>{let c=await(async({storename:e,index:a,dbname:n})=>{let r=(await s(n)).transaction([e],"readonly").objectStore(e);if(a)try{r=r.index(a)}catch(s){throw t("indexErr",{dbname:n,storename:e,key:a},s)}return r})({storename:a,index:n,dbname:e});if(!c[i])throw t("storeNotExistMethod",{method:i});return new Promise(((e,a)=>{c=c[i](o),c.onsuccess=t=>{e(t.target.result)},c.onerror=e=>{a(t("getDataErr",null,e.target.error))}}))},i=new Map,o=async({dbname:e="noneos_fs_defaults",storename:a="main",datas:n,removes:r})=>{if(!n?.length&&!r?.length)return!0;const o=await s(e);return new Promise(((e,s)=>{const c=o.transaction([a],"readwrite");c.oncomplete=t=>{n&&n.forEach((e=>{e.parent&&i.delete(`${e.parent}-${e.name}`)})),e(!0)},c.onerror=e=>{s(t("setDataErr",null,e.target.error))};const h=c.objectStore(a);n&&n.forEach((e=>{if(e.parent){const t=i.get(`${e.parent}-${e.name}`);if(t){const a=t;Object.assign(e,a)}else i.set(`${e.parent}-${e.name}`,e)}h.put(e)})),r&&r.length&&r.forEach((e=>h.delete(e)))}))},c=async e=>{const t=[];await Promise.all(e.map((async e=>{!await r({index:"hash",key:e})&&t.push(e)}))),t.length&&await o({storename:"blocks",removes:t})},h=async(e,a)=>{const n=await r({key:e.id});if(!n)throw t("deleted",{name:a,path:e.path},e);return n},l=async e=>{const t=[],a=Date.now();let n=e;for(;n;){const e=await r({key:n});if(!e)break;e.lastModified=a,t.push(e),n=e.parent}await o({datas:t})},p=async({source:e,target:t,name:a,callback:n})=>{if([t,a]=await u({target:t,name:a,self:e}),"file"===e.kind){const s=await e.file(),r=await t.get(a,{create:"file"});return await r.write(s,n),r}if("dir"===e.kind){const s=await t.get(a,{create:"dir"});return await e.forEach((async e=>{await p({source:e,target:s,name:e.name,callback:n})})),s}},u=async({target:e,name:a,self:n})=>{"string"==typeof e&&(a=e,e=await n.parent()),a||(a=n.name);let s=!1;for await(let t of e.keys())if(a===t){s=1;break}if(s)throw t("exitedName",{name:`${a}(${e.path}/${a})`});if(function(e,t){if(e===t)return!1;const a=t.split("/").filter((e=>e.length)),n=e.split("/").filter((e=>e.length));return a.every(((e,t)=>n[t]===e))}(e.path,n.path))throw t("notMoveToChild",{targetPath:e.path,path:n.path});return[e,a]};const d=async e=>{if("file"===e.kind)return[await w(e)];const t=[];for await(let a of e.values())if("dir"===a.kind){const e=await d(a);t.push(...e)}else t.push(await w(a));return t},w=async e=>{const t={size:await e.size(),path:e.path};return Object.defineProperty(t,"handle",{get:()=>e}),t},f=1048576,m=async e=>{if("string"==typeof e){e=(new TextEncoder).encode(e)}else e instanceof Blob&&(e=await(t=e,new Promise(((e,a)=>{const n=new FileReader;n.onloadend=()=>{e(new Uint8Array(n.result))},n.onerror=a,n.readAsArrayBuffer(t)}))));var t;const a=await crypto.subtle.digest("SHA-256",e);return Array.from(new Uint8Array(a)).map((e=>e.toString(16).padStart(2,"0"))).join("")},y=/[<>:"\\|?*\x00-\x1F]/;const g=async(e,t=1048576)=>{const a=[];for(let n=0;n<e.size;n+=t){const s=e.slice(n,n+t),r=await m(s);a.push(r)}return a},b=Symbol("storage-name"),k=Symbol("idb");class v{constructor(e="public"){return this[b]="main",this[k]=new Promise((t=>{let a=indexedDB.open(`ever-cache-${e}`);a.onsuccess=e=>{t(e.target.result)},a.onupgradeneeded=e=>{e.target.result.createObjectStore("main",{keyPath:"key"})}})),new Proxy(this,T)}async setItem(e,t){return E(this,(a=>a.put({key:e,value:t}))).then((()=>!0))}async getItem(e){try{return E(this,(t=>t.get(e)),"readonly").then((e=>{const{result:t}=e.target;return t?t.value:null}))}catch(e){}}async removeItem(e){return E(this,(t=>t.delete(e))).then((()=>!0))}async clear(){return E(this,(e=>e.clear())).then((()=>!0))}async key(e){return E(this,(e=>e.getAllKeys())).then((t=>t.target.result[e]))}get length(){return E(this,(e=>e.count())).then((e=>e.target.result))}entries(){return{[Symbol.asyncIterator]:()=>{let e,t;const a=()=>{t=new Promise((t=>e=t))};return a(),E(this,(e=>e.openCursor()),"readonly",(t=>e(t.target.result))),{async next(){const e=await t;if(!e)return{done:!0};a();const{key:n,value:s}=e.value;return e.continue(),{value:[n,s],done:!1}}}}}}async*keys(){for await(let[e,t]of this.entries())yield e}async*values(){for await(let[e,t]of this.entries())yield t}}const x=new Set(Object.getOwnPropertyNames(v.prototype)),T={get:(e,t,a)=>x.has(t)||"symbol"==typeof t?Reflect.get(e,t,a):e.getItem(t),set:(e,t,a)=>e.setItem(t,a),deleteProperty:(e,t)=>e.removeItem(t)},E=async(e,t,a="readwrite",n)=>{const s=await e[k];return new Promise(((r,i)=>{const o=t(s.transaction([e[b]],a).objectStore(e[b]));o.onsuccess=e=>{if(n){const t=n(e);t&&r(t)}else r(e)},o.onerror=e=>{i(e)}}))};new v;const D="undefined"!=typeof $;!D||$.stanz([]);const _=D?$.stanz([]):[];new EventTarget;const P=D?$.stanz([]):[],I=D?$.stanz([]):[];D||(P.watchTick=()=>{},I.watchTick=()=>{});const j={},B={},z=new v("noneos-blocks-data");{P.watchTick((()=>{P.length>100&&P.splice(70)}),100);let e=null;const t=async()=>{const a=[];try{for await(let[e,t]of z.entries()){Date.now()-t.time>6e5&&a.push(e)}const e=await J("local/caches/blocks",{create:"dir"});a.length&&await Promise.all(a.map((async t=>{await z.removeItem(t);const a=await e.get(t);a&&await a.remove()})))}catch(e){console.error(e)}return clearTimeout(e),e=setTimeout((()=>t()),6e4),a};t()}const A=async({data:e,path:t,reason:a,userId:n})=>{const s=await(async(e,t=1048576)=>{let a;if("string"==typeof e)a=new Blob([(new TextEncoder).encode(e)],{type:"text/plain"});else if(e instanceof Blob)a=e;else{if(!(e instanceof ArrayBuffer||e instanceof Uint8Array))throw new Error("Input must be a string, Blob, ArrayBuffer, or Uint8Array");a=new Blob([e],{type:"application/octet-stream"})}const n=[];for(let e=0;e<a.size;e+=t){const s=a.slice(e,e+t);n.push(s)}return n})(e,131072);return await C(s,{reason:a,reasonData:{path:t,userId:n}})},C=async(e,{reason:t,reasonData:a})=>{const n=await J("local/caches/blocks",{create:"dir"}),s=await Promise.all(e.map((async e=>{const t=await m(e);z.setItem(t,{time:Date.now()});const a=await n.get(t,{create:"file"});return await a.write(e),B[t]&&B[t].resolve(e),t})));return P.unshift({type:"save",hashs:s,time:Date.now(),reason:t,reasonData:a}),s},S=async(e,{reason:t,reasonData:a})=>{const n=await J("local/caches/blocks",{create:"dir"}),s=[],r=await Promise.all(e.map((async e=>{const t=await n.get(e);return t?(s.push(e),{hash:e,data:await t.file()}):{hash:e}})));return P.unshift({type:"get",hashs:e,time:Date.now(),reasonData:{exists:s,...a},reason:t}),r};class M{constructor(){}async flat(){return d(this)}async _info(){const e=await this.flat(),t=await Promise.all(e.map((async e=>{const{handle:t}=e,a=await t._getHashs(),n=await t.hash();return[e.path,{size:e.size,hashs1m:a,hash:n}]})));return t}async _saveCache({options:e}){const t=await this.file(e);return await A({data:t,reason:"save-cache",path:this.path,userId:this.__remote_user})}async _writeByCache({hashs:e,userId:t}){const a=await(async({hashs:e,userId:t,reason:a,path:n})=>{let s;t&&(s=_.find((e=>e.userId===t)));const r={path:n};s&&(r.userId=s.userId);const i=await S(e,{reason:a,reasonData:r}),o=[];i.forEach((e=>{e.data||o.push(e.hash)})),o.length&&s.send({type:"get-block",path:n,hashs:o});const c=await Promise.all(i.map((async e=>{const{hash:t,data:a}=e;if(a)return a;let n=j[t];return n||(n=j[t]=new Promise(((e,a)=>{let n=()=>{n=null,delete j[t],delete B[t]};B[t]={resolve(t){e(t),n()},reject(e){a(e),n()}}}))),n})));return new Blob(c)})({hashs:e,userId:t,path:this.path,reason:"remote-write-cache"});return await this.write(a)}async hash(){if("dir"===this.kind)throw new Error("The directory cannot use the hash method");const e=await this._getHashs();return await m(e.join(""))}async _getHashs(e){if("dir"===this.kind)throw new Error("The directory cannot use the _getHashs method");const t=e?.chunkSize||f;if("file"===this.kind)return g(await this._fsh.getFile(),t)}async _dataHash(){const e=await this.file();return await m(e)}async _mergeChunks(e){const{flatFileDatas:t,delayTime:a}=e;let n;{const e=await this.parent();n=await e.get(`${this.name}.fs_task_cache`)}const s=this;if("dir"===this.kind){let r=0;for(let[i,o]of t){const{afterPath:c}=o,{hashs1m:h}=o;await N({path:i,hashs1m:h,blobsDir:n,merge:a=>{r++,e.merge&&e.merge({...a,count:r,total:t.length})},delayTime:a,fileHandle:await s.get(c,{create:"file"})})}}else{const[r,i]=t[0],{hashs1m:o}=i;await N({path:r,hashs1m:o,blobsDir:n,merge:e.merge,delayTime:a,fileHandle:s})}return!0}}const N=async({path:e,hashs1m:t,blobsDir:a,merge:n,delayTime:s,fileHandle:r})=>{const i=await Promise.all(t.map((async e=>{const t=await a.get(e);if(!t)throw new Error("no blob here");return t.file()})));await r.write(new Blob(i)),n&&n({path:r.path,fromPath:e,count:1,total:1}),s&&await new Promise((e=>setTimeout(e,s)))};class R extends M{#e;#t;#a;#n;#s;#r;constructor(e,t){super(),this.#e=e,this.#t=t}get id(){return this.#e}get path(){return this.#a}get name(){return this.#n}get kind(){return this.#t}get createTime(){return this.#s}get lastModified(){return this.#r||null}async root(){let e=await h(this,"root");for(;"root"!==e.parent;)e=await r({key:e.parent});const t=await new H(e.key);return await t.refresh(),t}async parent(){const e=await h(this,"parent");if("root"===e.parent)return null;const t=new H(e.parent);return await t.refresh(),t}async moveTo(e,t){[e,t]=await u({target:e,name:t,self:this});const a=await h(this,"move");a.parent=e.id,a.name=t.toLowerCase(),a.realName=t,await o({datas:[a]}),await this.refresh()}async copyTo(e,t,a){if([e,t]=await u({target:e,name:t,self:this}),!(e instanceof R))return p({source:this,target:e,name:t,callback:a});let n;switch(this.kind){case"dir":n=await e.get(t,{create:"dir"});for await(let[e,t]of this.entries())await t.copyTo(n,e);break;case"file":n=await e.get(t,{create:"file"});const a=await h(this,"move"),s=await r({key:n.id}),i=s.hashs=a.hashs;await o({datas:[{...a,...s},...i.map(((e,t)=>({key:`${s.key}-${t}`,hash:e,type:"block"})))]})}return await l(e.id),n}async remove(e){const a=await h(this,"remove");if("root"===a.parent)throw t("notDeleteRoot",{name:this.name});"dir"===this.kind&&await this.forEach((async t=>{await t.remove(e)}));const n=a.hashs||[],s=[a.key];n.forEach(((e,t)=>{s.push(`${a.key}-${t}`)})),await o({removes:s}),n.length&&await c(n),e&&e({type:"remove",path:this.path})}async refresh(){const e=await h(this,"refresh");this.#s=e.createTime,this.#r=e.lastModified,this.#n=e.realName||e.name;const t=[e.realName||e.name];let a=e;for(;"root"!==a.parent;)a=await r({key:a.parent}),t.unshift(a.realName||a.name);return this.#a=t.join("/"),{createTime:e.createTime,lastModified:e.lastModified}}async size(){const e=await h(this,"size");if("file"===e.type)return e.size}toJSON(){const e={};return["createTime","id","kind","lastModified","name","path"].forEach((t=>{e[t]=this[t]})),e}get _mark(){return"db"}}class F extends R{constructor(e){super(e,"file")}async write(e,t){const a=await this.createWritable(),n=e.length||e.size||e.byteLength||0,s=Math.ceil(n/f);return a.onbeforewrite=e=>{t&&t({...e,length:s,type:"write-file-start"})},a.onwrite=e=>{t&&t({...e,length:s,type:"write-file-end"})},await a.write(e),await a.close(),!0}async createWritable(){return new O(this.id,this.path)}async read(e,t){const a=await h(this,"读取数据"),{hashs:n}=a;let s=[];if(t&&(t.start||t.end)){let e=Math.floor(t.start/f),a=Math.floor(t.end/f);s=await Promise.all(n.map((async(n,s)=>{let i;if(s>=e&&s<=a){i=(await r({storename:"blocks",key:n})).chunk,e===a?i=i.slice(t.start-s*f,t.end-s*f):s===e?i=i.slice(-1*((e+1)*f-t.start)):s===a&&(i=i.slice(0,t.end-a*f))}if(i)return i instanceof Blob?i:new Blob([i],{type:"application/octet-stream"})}))),s=s.filter((e=>!!e))}else n&&(s=await Promise.all(n.map((async(e,t)=>{const a=await r({storename:"blocks",key:e}),{chunk:n}=a;return n instanceof Blob?n:new Blob([n])}))));const i=new Blob(s,{type:"application/octet-stream"});return await(({blobData:e,type:t,data:a,isChunk:n})=>{if("text"!==t)return"file"===t?n?e:new File([e],a.name,{lastModified:a.lastModified}):"base64"===t?new Promise((t=>{const a=new FileReader;a.onload=()=>{t(a.result)},a.readAsDataURL(e)})):e;try{return new Response(e).text()}catch(e){throw e}})({blobData:i,type:e,data:{name:this.name},isChunk:t?.start||t?.end})}file(e){return this.read("file",e)}text(e){return this.read("text",e)}buffer(e){return this.read("buffer",e)}base64(e){return this.read("base64",e)}async _getHashs(e){const t=e?.chunkSize||f;if(t!==f)return g(await this.file(),t);const a=await r({key:this.id});return a?a.hashs:null}}class O{#i;#o=new ArrayBuffer;#c=[];#h=0;#a;constructor(e,t){this.#i=e,this.#a=t}async write(e){let t;if("string"==typeof e)t=new Blob([(new TextEncoder).encode(e)],{type:"text/plain"});else if(e instanceof Blob)t=e;else{if(!(e instanceof ArrayBuffer||e instanceof Uint8Array))throw new Error("Input must be a string, Blob, ArrayBuffer or Uint8Array");t=new Blob([e],{type:"application/octet-stream"})}for(this.#h+=t.size,this.#o=this.#l(this.#o,t);this.#o.size>f;){const e=this.#o.slice(0,f);this.#o=this.#o.slice(f);const t=await this._writeChunk(e);this.#c.push(t)}}#l(e,t){return new Blob([e,t],{type:"application/octet-stream"})}async _writeChunk(e){const t=await m(e),a=await r({storename:"blocks",key:t}),n={path:this.#a,index:this.#c.length,hash:t,exited:a};this.onbeforewrite&&this.onbeforewrite({type:"onbeforewrite",...n});let s=e;return U&&(s=await new Promise((t=>{const a=new FileReader;a.readAsArrayBuffer(e),a.onload=()=>t(a.result)}))),a||await o({storename:"blocks",datas:[{hash:t,chunk:s}]}),this.onwrite&&this.onwrite({type:"onwrite",...n}),t}async close(){const e=await h({id:this.#i},"write");if(e){if(this.#o.size>0){const e=await this._writeChunk(this.#o);this.#c.push(e)}{const t=e.hashs||[],a=this.#c,n=this.#h,s=[];for(let e=0;e<t.length;e++)e>=a.length&&s.push(`${this.#i}-${e}`);await o({datas:[{...e,lastModified:Date.now(),hashs:a,size:n},...a.map(((e,t)=>({type:"block",key:`${this.#i}-${t}`,hash:e})))],removes:s}),t.length&&await c(t),await l(e.parent)}}else await this.abort()}async abort(){this.#c&&await c(this.#c)}}const U=navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome");class H extends R{constructor(e){super(e,"dir")}async get(e,a){if(!function(e){return!y.test(e)}(e))throw t("pathInvalid",{path:e});await h(this,"get");const s=e.split("/");if(a&&a.create&&"file"!==a.create&&"dir"!==a.create)throw t("invalidCreateType");let i=this;if(s.length>1)for(const e of s.slice(0,-1)){let n=i;if(i=await i.get(e,{create:a?.create?"dir":void 0}),!i)throw await n.refresh(),t("pathNotFound",{path:n.path+"/"+e})}let c=s.slice(-1)[0],p=await r({index:"parent_and_name",key:[i.id,c.toLowerCase()]});if(a&&a.create&&!p){const e=Date.now();p={createTime:e,lastModified:e,key:n(),realName:c,name:c.toLowerCase(),parent:i.id,type:a.create},await o({datas:[p]}),await l(i.id)}if(a&&a.create&&a.create!==p.type)throw t("targetAnotherType",{path:i.path+"/"+c,exitedType:p.type,targetType:a.create});return await q(p)}async*keys(){h(this,"keys");const e=await L(this.id);for(let t of e)yield t.name}async*entries(){h(this,"entries");const e=await L(this.id);for(let t of e)yield[t.name,await q(t)]}async*values(){h(this,"values");for await(let[,e]of this.entries())yield e}async forEach(e){h(this,"forEach");const t=await L(this.id);let a=0;for(let n of t)await e(await q(n),a),a++}async length(){h(this,"length");return await r({key:this.id,index:"parent",method:"count"})}}const L=async e=>await r({key:e,index:"parent",method:"getAll"}),q=async e=>{let t=null;if(e){switch(e.type){case"dir":t=new H(e.key);break;case"file":t=new F(e.key)}await t.refresh()}return t},W=(async()=>{await(async e=>{await r({index:"parent_and_name",key:["root",e]})||await o({datas:[{key:n(),parent:"root",name:e,createTime:Date.now()}]})})("local")})(),J=async(e,a)=>{const n=e.split("/");if(!n.length)throw t("pathEmpty");if(""===n[0])throw t("rootEmpty");await W;const s=await r({index:"parent_and_name",key:["root",n[0]]});if(!s)throw t("rootNotExist",{rootname:n[0]});const i=new H(s.key);return 1===n.length?(await i.refresh(),i):i.get(n.slice(1).join("/"),a)},K=async({request:e})=>{const{pathname:t}=new URL(e.url),a=decodeURIComponent(t.replace(/^\/\$\//,"")),n=a.split("/");if(!(3!==n.length||"apps"!==n[0]&&"packages"!==n[0]||"app"!==n[2]&&"appdebug"!==n[2]))return V({pathname:t,path:a});const s=await J(a);let r=await s.file();const i={},o=a.split(".").pop();return/^\/\$\/apps\//.test(t)&&"html"===o&&"index.html"===s.name?i["Content-Type"]="text/html; charset=utf-8":i["Content-Type"]=(e=>{switch(e){case"html":case"htm":case"txt":case"md":return"text/plain; charset=utf-8";case"js":case"mjs":return"application/javascript; charset=utf-8";case"json":return"application/json; charset=utf-8";case"css":return"text/css; charset=utf-8";case"xml":return"application/xml; charset=utf-8";case"svg":return"image/svg+xml; charset=utf-8";case"csv":return"text/csv; charset=utf-8";case"ics":return"text/calendar; charset=utf-8";case"pdf":return"application/pdf; charset=utf-8";case"doc":case"docx":return"application/msword; charset=utf-8";case"xls":case"xlsx":return"application/vnd.ms-excel; charset=utf-8";case"ppt":case"pptx":return"application/vnd.ms-powerpoint; charset=utf-8";case"zip":return"application/zip; charset=utf-8";case"gz":return"application/gzip; charset=utf-8";case"tar":return"application/x-tar; charset=utf-8";case"jpg":case"jpeg":return"image/jpeg";case"png":return"image/png";case"gif":return"image/gif";case"bmp":case"bmp":return"image/bmp";case"ico":return"image/x-icon";case"webp":return"image/webp";case"mp3":return"audio/mpeg";case"wav":return"audio/wav";case"mp4":case"m4v":return"video/mp4";case"mov":return"video/quicktime";case"avi":return"video/x-msvideo";default:return"application/octet-stream"}})(o),new Response(r,{status:200,headers:i})},V=async({pathname:e,path:t})=>{let a;const n=t.split("/"),s=n.slice(0,-1).join("/"),r="appdebug"===n.slice(-1)[0];try{a=await J(`${s}/app.json`),a=JSON.parse(await a.text())}catch(e){a=await fetch(`/${s}/app.json`).then((e=>e.json()))}return new Response(`<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="apple-mobile-web-app-capable" content="yes" />\n    <meta name="mobile-web-app-capable" content="yes" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" />\n    <title>${a.name}</title>\n    <link rel="shortcut icon" href="${a.icon}">\n    <link rel="apple-touch-icon" href="${a.icon}" />\n    <script src="/packages/libs/ofa/ofa.js"${r?" debug":""}><\/script>\n    <script src="/packages/libs/ofa/router.min.js"><\/script>\n    <script src="/packages/pui/init.js" type="module"><\/script>\n    <style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        height: 100%;\n      }\n\n      o-app {\n        height: 100%;\n      }\n    </style>\n  </head>\n  <body>\n    <o-router fix-body>\n      <o-app src="${a.config}"></o-app>\n    </o-router>\n    <o-root-provider name="pui" theme="dark"></o-root-provider>\n    <o-root-provider name="clipboard" type="no"></o-root-provider>\n  </body>\n</html>\n    `,{status:200,headers:{"Content-Type":"text/html; charset=utf-8"}})};self.addEventListener("fetch",(e=>{const{request:t}=e,{pathname:a,origin:n}=new URL(t.url);location.origin===n&&("/"===a||"/index.html"===a?e.respondWith((async e=>{const t=await caches.open("noneos-default-cache");let a=await t.match(e);return a?a.clone():(a=await fetch(e),200===a.status&&t.put(e,a.clone()),a)})(a)):/^\/\$/.test(a)?e.respondWith((async()=>{try{return await K({request:t})}catch(e){return console.error(e),new Response(e.stack||e.toString(),{status:404})}})()):/^\/packages\//.test(a)&&e.respondWith((async()=>{try{return await K({request:{url:`${n}/$${a}`}})}catch(e){return fetch(t.url)}})()))})),self.addEventListener("install",(()=>{self.skipWaiting(),console.log("NoneOS installation successful")})),self.addEventListener("activate",(()=>{self.clients.claim(),console.log("NoneOS server activation successful")}))}();
