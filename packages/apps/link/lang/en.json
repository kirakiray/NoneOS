{
  "home": "Home",
  "server": "Server",
  "user": "User",
  "authorization": "Authorization",
  "time": "Time",
  "type": "Type",
  "block": "Data block",
  "username": "Username",
  "userid": "User ID",
  "publicKey": "Public key",
  "serverName": "Server name",
  "serverVersion": "Server version",
  "startLinkTime": "Start connection time",
  "addServer": "Add server",
  "addServerPlace": "Fill in handshake server address",
  "succeedTime": "Success time",
  "state": "State",
  "linkState": "Connection state",
  "disconnect": "Disconnect",
  "reconnect": "Reconnect",
  "delay": "Delay",
  "testDelay": "Test delay",
  "serverAddress": "Server address",
  "viewHisLogs": "View historical logs",
  "delete": "Delete",
  "okDelete": "Confirm deletion",
  "cancel": "Cancel",
  "deleteDialogTitle": "Delete Server",
  "handServer": "Handshake Server",
  "iceServer": "ICE Server",
  "addIceServerPlace": "Enter the ice server address and press Enter to add",
  "pwd": "Password",
  "iceIll": "The ice server address entered is illegal",
  "deleteContent": "Are you sure you want to delete {serverName}({serverUrl}) from your local computer?",
  "deleteIceServer": "Confirm to delete ice server: {urls}",
  "hisLogs": "Historical Logs",
  "refresh": "Refresh",
  "deleteAllLogs": "Delete all logs",
  "noLogs": "No logs",
  "empty": "Empty",
  "minute5": "Within five minutes",
  "hor1": "Within one hour",
  "hor24": "Within 24 hours",
  "day1": "One day ago",
  "deleteLog": "Delete log",
  "deletAllLogsQe": "Are you sure to delete all logs? ",
  "collContent": "Collapse content",
  "showAllContent": "Show all",
  "send": "Send",
  "receive": "Receive",
  "requestRecommends": "Request recommendation list",
  "searchUser": "Find user",
  "serverInit": "Service initialization",
  "setCandi": "Set candidate",
  "useOffer": "Use offer",
  "remoteOffer": "Remote offer",
  "forwardData": "Forward data",
  "recommendUser": "Recommend user",
  "refreshUser": "Refresh user",
  "signTime": "Signature time",
  "errInfo": "Error information",
  "delayTime": "Delay time",
  "connectUser": "Connect user",
  "connecting": "Connecting...",
  "viewHandLog": "View handshake log",
  "viewUserLog": "View user log",
  "userLog": "User log",
  "writeTestContent": "Fill in the test content to be sent",
  "logHis": "Log Record",
  "testMsg": "Test Information",
  "reqCert": "Request the other party's certificate",
  "cacheOtherSideCert": "Cache the certificate given by the other party",
  "fileBad": "File is damaged",
  "localCert": "Local Certificate",
  "customCert": "Custom Authorization Certificate",
  "importCert": "Manually import certificate",
  "fillCert": "Please fill in the certificate content",
  "yesImport": "Confirm import",
  "rootCert": "Root Certificate",
  "importOK": "Import Successfully",
  "alreadyImportCert": "Certificate already exists",
  "authManager": "Authorization Management",
  "certData": {
    "issuer": "Issuer",
    "authTo": "Authorize to",
    "permission": "Permission",
    "signPublic": "Public Key",
    "creation": "Creation Time",
    "expire": "Expiration Time"
  },
  "expired": "Expired",
  "copySucceed": "Copy successful",
  "copyCert": "Copy certificate",
  "deleteCert": "Delete certificate",
  "deleteCertQe": "Confirm to delete certificate? ",
  "yesAuth": "Confirm authorization",
  "expiredTime": "Expiration time",
  "dataBlock": "Data block",
  "blockLog": "Data block log",
  "clearLog": "Clear log",
  "waitToSend": "Wait to send",
  "alreadySend": "Sent",
  "sendSucceed": "Sent successfully",
  "otherSideUser": "Other user",
  "targetFile": "Target file",
  "reason": "Reason",
  "requestBlock": "Request block",
  "cacheBlock": "Cache block",
  "clearBlock": "Clear block",
  "blockReason": {
    "responseBlock": "Receive binary cache block",
    "beforeSendWrite": "Block before writing file to remote end",
    "bigData": "Notification data is too large",
    "fsBridgeData": "File notification information is too large",
    "saveCache": "The other party requests my file",
    "middleGetBlock": "The other party asked me to send him a data block",
    "alreadyReceived": "The other party has received the data block",
    "handleRead": "Read remote files",
    "remoteWriteCache": "Get notification and use cache to write files",
    "clearReadCache": "Clear the cache for reading remote files"
  }
}
