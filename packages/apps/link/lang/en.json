{
  "home": "Home",
  "server": "Server",
  "user": "User",
  "authorization": "Authorization",
  "time": "Time",
  "type": "Type",
  "block": "Block",
  "username": "Username",
  "userid": "User ID",
  "publicKey": "Public Key",
  "serverName": "Server Name",
  "serverVersion": "Server Version",
  "startLinkTime": "Start Connection Time",
  "addServer": "Add Server",
  "addServerPlace": "Enter the handshake server address",
  "succeedTime": "Success Time",
  "state": "State",
  "linkState": "Connection State",
  "disconnect": "Disconnect",
  "reconnect": "Reconnect",
  "delay": "Delay",
  "testDelay": "Test Delay",
  "serverAddress": "Server Address",
  "viewHisLogs": "View History Logs",
  "delete": "Delete",
  "okDelete": "Confirm Delete",
  "cancel": "Cancel",
  "deleteDialogTitle": "Delete Server",
  "handServer": "Handshake Server",
  "iceServer": "ICE Server",
  "addIceServerPlace": "Enter ICE server address and press Enter to add",
  "pwd": "Password",
  "iceIll": "The entered ICE server address is invalid",
  "deleteContent": "Are you sure you want to delete {serverName} ({serverUrl}) from local storage?",
  "deleteIceServer": "Confirm delete ICE server: {urls}",
  "hisLogs": "History Logs",
  "refresh": "Refresh",
  "deleteAllLogs": "Delete All Logs",
  "noLogs": "No Logs",
  "empty": "Empty",
  "minute5": "Within 5 Minutes",
  "hor1": "Within 1 Hour",
  "hor24": "Within 24 Hours",
  "day1": "Over a Day Ago",
  "deleteLog": "Delete Log",
  "deleteAllLogsQe": "Confirm to delete all logs?",
  "collContent": "Collapse Content",
  "showAllContent": "Show All Content",
  "send": "Send",
  "receive": "Receive",
  "requestRecommends": "Request Recommended List",
  "searchUser": "Search User",
  "serverInit": "Server Initialization",
  "setCandi": "Set Candidate",
  "useOffer": "Use Offer",
  "remoteOffer": "Remote Offer",
  "forwardData": "Forward Data",
  "recommendUser": "Recommend User",
  "refreshUser": "Refresh User",
  "signTime": "Signature Time",
  "errInfo": "Error Information",
  "delayTime": "Delay Time",
  "connectUser": "Connect User",
  "connecting": "Connecting...",
  "viewHandLog": "View Handshake Logs",
  "viewUserLog": "View User Logs",
  "userLog": "User Logs",
  "writeTestContent": "Enter test content to send",
  "logHis": "Log History",
  "testMsg": "Test Message",
  "reqCert": "Request Peer Certificate",
  "cacheOtherSideCert": "Cache the received certificate",
  "fileBad": "File Corrupted",
  "localCert": "Local Certificate",
  "customCert": "Custom Authorization Certificate",
  "importCert": "Manually Import Certificate",
  "fillCert": "Please fill in the certificate content",
  "yesImport": "Confirm Import",
  "rootCert": "Root Certificate",
  "importOK": "Import Successful",
  "alreadyImportCert": "Certificate Already Exists",
  "authManager": "Authorization Management",
  "certData": {
    "issuer": "Issuer",
    "authTo": "Authorized To",
    "permission": "Permission",
    "signPublic": "Public Key",
    "creation": "Creation Time",
    "expire": "Expiration Time"
  },
  "expired": "Expired",
  "copySucceed": "Copy Successful",
  "copyCert": "Copy Certificate",
  "deleteCert": "Delete Certificate",
  "deleteCertQe": "Confirm delete certificate?",
  "yesAuth": "Confirm Authorization",
  "expiredTime": "Expiration Time",
  "dataBlock": "Data Block",
  "blockLog": "Data Block Logs",
  "clearLog": "Clear Logs",
  "waitToSend": "Waiting to Send",
  "alreadySend": "Sent",
  "sendSucceed": "Send Successful",
  "otherSideUser": "Peer User",
  "targetFile": "Target File",
  "reason": "Reason",
  "requestBlock": "Request Block",
  "cacheBlock": "Cache Block",
  "clearBlock": "Clear Block",
  "blockReason": {
    "responseBlock": "Received Binary Cache Block",
    "beforeSendWrite": "Pre-splitting before writing files to remote",
    "bigData": "Notifying that data is too large",
    "fsBridgeData": "File notification data is too large",
    "saveCache": "Peer requested my file",
    "middleGetBlock": "Peer requested a data block from me",
    "alreadyReceived": "Peer has received the data block",
    "handleRead": "Reading remote file",
    "remoteWriteCache": "Notification received, writing file using cache",
    "clearReadCache": "Clearing cache of reading remote file"
  }
}
