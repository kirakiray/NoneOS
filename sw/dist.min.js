!function(){"use strict";const e=e=>{switch(e){case"html":case"htm":case"txt":case"md":return"text/plain; charset=utf-8";case"js":case"mjs":return"application/javascript; charset=utf-8";case"json":return"application/json; charset=utf-8";case"css":return"text/css; charset=utf-8";case"xml":return"application/xml; charset=utf-8";case"svg":return"image/svg+xml; charset=utf-8";case"csv":return"text/csv; charset=utf-8";case"ics":return"text/calendar; charset=utf-8";case"pdf":return"application/pdf; charset=utf-8";case"doc":case"docx":return"application/msword; charset=utf-8";case"xls":case"xlsx":return"application/vnd.ms-excel; charset=utf-8";case"ppt":case"pptx":return"application/vnd.ms-powerpoint; charset=utf-8";case"zip":return"application/zip; charset=utf-8";case"gz":return"application/gzip; charset=utf-8";case"tar":return"application/x-tar; charset=utf-8";case"jpg":case"jpeg":return"image/jpeg";case"png":return"image/png";case"gif":return"image/gif";case"bmp":case"bmp":return"image/bmp";case"ico":return"image/x-icon";case"webp":return"image/webp";case"mp3":return"audio/mpeg";case"wav":return"audio/wav";case"mp4":case"m4v":return"video/mp4";case"mov":return"video/quicktime";case"avi":return"video/x-msvideo";default:return"application/octet-stream"}};const t=async e=>{const{request:t}=e,{pathname:s,origin:a,searchParams:n}=new URL(t.url);let r="icon.svg";e.respondWith((async()=>{let e="App";try{const t=await fetch(`${s}app.json`).then((e=>e.json()));r=t.icon||r,e=t.name||s.split("/").filter((e=>/\.napp$/.test(e))).slice(-1)[0].replace(/\.napp$/,"")}catch(e){}return new Response(`<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>${e}</title>\n    <link rel="icon" href="./${r}">\n    <link rel="stylesheet" href="/packages/others/colors.css" pui-colors />\n    <script src="/packages/libs/ofa/ofa.js"><\/script>\n    <script src="/packages/libs/ofa/router.min.js"><\/script>\n    <script src="/packages/pui/public/init.js" type="module"><\/script>\n    <script src="/packages/none-os/init.js" type="module"><\/script>\n  </head>\n  <body>\n    <o-router fix-body>\n      <o-app src="./app-config.js"></o-app>\n    </o-router>\n  </body>\n</html>`,{status:200,headers:{"content-type":"text/html; charset=utf-8"}})})())};self.addEventListener("fetch",(s=>{const{request:a}=s,{pathname:n,origin:r,searchParams:c}=new URL(a.url);location.origin===r&&(/^\/\$/.test(n)?(t=>{const{request:s}=t,{pathname:a,origin:n,searchParams:r}=new URL(s.url),c=a.split("/"),i=[c[1].replace("$",""),...c.slice(2)].join("/");t.respondWith((async()=>{try{const t=await navigator.storage.getDirectory(),s=i.split("/");let n="",r=t;for(;s.length>1;){const e=s.shift();n+=`${e}/`;const t=await r.getDirectoryHandle(e).catch((()=>null));if(!t)throw new Error(`目录 ${n} 不存在`);r=t}const c=await r.getFileHandle(s[0]).catch((()=>null));if(!c)throw new Error(`文件 ${i} 不存在`);const o=a.split(".").pop(),p={};return p["Content-Type"]=e(o),new Response(await c.getFile(),{status:200,headers:p})}catch(e){return new Response(e.stack||e.toString(),{status:400})}})())})(s):/^\/packages/.test(n)&&async function(e){const{request:s}=e,{pathname:a,origin:n,searchParams:r}=new URL(s.url);/\.napp\/$/.test(a)&&t(e)}(s))})),self.addEventListener("install",(()=>{self.skipWaiting(),console.log("NoneOS installation successful")})),self.addEventListener("activate",(()=>{self.clients.claim(),console.log("NoneOS server activation successful")}))}();
