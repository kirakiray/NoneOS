!function(){"use strict";var t="undefined"!=typeof document?document.currentScript:null;class e{#t;#e;constructor(t){this.#t=t.parent,this.#e=t.root}get parent(){return this.#t}get root(){return this.#e||this}get path(){return this.parent?`${this.parent.path}/${this.name}`:this.name}async size(){if("file"===this.kind){return(await this.file()).size}return null}async copyTo(t,e){const[a,r]=await n(t,e,"copy",this);if("file"===this.kind){const t=await a.get(r,{create:"file"});return await t.write(await this.file()),t}const s=await a.get(r,{create:"dir"});for await(const[t,e]of this.entries())await e.copyTo(s,t);return s}async moveTo(t,e){const[a,r]=await n(t,e,"move",this);if("file"===this.kind){const t=await a.get(r,{create:"file"});return await t.write(await this.file()),await this.remove(),t}const s=await a.get(r,{create:"dir"});for await(const[t,e]of this.entries())await e.moveTo(s,t);return await this.remove(),s}toJSON(){return{name:this.name,path:this.path,kind:this.kind}}observe(t){const e={func:t,handle:this};return r.add(e),()=>{r.delete(e)}}}const a=new BroadcastChannel("nonefs-system-handle-change");a.onmessage=t=>{s({...t.data},!0)};const r=new Set,s=({path:t,...e},s)=>{s||a.postMessage({path:t,...e}),r.forEach((a=>{t.includes(a.handle.path)&&a.func({path:t,...e})}))},n=async(t,e,a,r)=>{let s=t,n=e;if("string"==typeof t&&(n=t,s=r.parent),await r.isSame(s))return r;const i=s.path,c=r.path;if(i.startsWith(c+"/"))throw new Error(`Cannot ${a} a directory into its subdirectory`);return n=n||r.name,[s,n]},i=async t=>{if(globalThis.crypto){"string"==typeof t?t=(new TextEncoder).encode(t):t instanceof Blob&&(t=await t.arrayBuffer());const e=await crypto.subtle.digest("SHA-256",t);return Array.from(new Uint8Array(e)).map((t=>t.toString(16).padStart(2,"0"))).join("")}{const e=await import("crypto");"string"==typeof t?t=(new TextEncoder).encode(t):t instanceof Blob&&(t=await t.arrayBuffer());const a=e.createHash("sha256");return a.update(Buffer.from(t)),a.digest("hex")}},c=(()=>{const t=navigator.userAgent.toLowerCase();return t.includes("safari")&&!t.includes("chrome")})();class o extends e{#a=null;constructor(t,e={}){super(e),this.#a=t}get _handle(){return this.#a}get name(){return this.#a.name}async id(){const t=this.#a;return t.getUniqueId?await t.getUniqueId():await i(this.path)}async isSame(t){return this.#a.isSameEntry(t._handle)}async remove(){const t=this.parent;await t.#a.removeEntry(this.#a.name,{recursive:!0}),s({type:"remove",path:this.path})}}class h{async file(t){return this.read({...t,type:"file"})}async text(t){return this.read({...t,type:"text"})}async buffer(t){return this.read({...t,type:"buffer"})}async base64(t){const e=await this.file(t);return new Promise(((t,a)=>{const r=new FileReader;r.onload=()=>{t(r.result)},r.onerror=t=>{a(t)},r.readAsDataURL(e)}))}async lastModified(){return(await this.file()).lastModified}get kind(){return"file"}}const l=async t=>{const e=Object.getOwnPropertyDescriptors(h.prototype);delete e.constructor,Object.defineProperties(t.prototype,e)};class p extends o{constructor(...t){super(...t)}async read(t={}){let e=await this._handle.getFile();switch((t.start||t.end)&&(e=e.slice(t.start,t.end)),t.type){case"file":return e;case"buffer":return e.arrayBuffer();default:return e.text()}}async write(t,e={}){const a=this._handle,r=await a.createWritable();await r.write(t),await r.close(),s({path:this.path,type:"write",data:t,remark:e.remark})}}l(p);class u{async _getByMultiPath(t,e){const{create:a}=e||{},r=t.split("/");let s=this;for(;r.length;){const t=r.shift();let e;a&&(e=r.length?"dir":a),s=await s.get(t,{create:e})}return s}async*entries(){for await(let t of this.keys()){const e=await this.get(t);yield[t,e]}}async*values(){for await(let[t,e]of this.entries())yield e}async some(t){for await(let[e,a]of this.entries())if(await t(a,e,this))break}async forEach(t){for await(let[e,a]of this.entries())await t(a,e,this)}async flat(){const t=[];for await(const[e,a]of this.entries())if("dir"!==a.kind)t.push(a);else{const e=await a.flat();t.push(...e)}return t}get kind(){return"dir"}}const d=async t=>{const e=Object.getOwnPropertyDescriptors(u.prototype);delete e.constructor,Object.defineProperties(t.prototype,e)};class f extends o{constructor(...t){super(...t)}async get(t,e){const{create:a}=e||{};if(t.includes("/"))return await this._getByMultiPath(t,e);let r=await this._handle.getFileHandle(t).catch((()=>null));if(r||(r=await this._handle.getDirectoryHandle(t).catch((()=>null))),!a&&!r)return null;if(r){if("file"===a&&"file"!==r.kind)throw new Error(`${t} is not a file`);if("dir"===a&&"directory"!==r.kind)throw new Error(`${t} is not a directory`)}else{let a="getDirectoryHandle";"file"===e.create&&(a="getFileHandle"),r=await this._handle[a](t,{create:!0})}return"file"===r.kind?new p(r,{parent:this,root:this.root||this}):"directory"===r.kind?new f(r,{parent:this,root:this.root||this}):null}async length(){let t=0;for await(const[e,a]of this._handle.entries())t++;return t}async*keys(){for await(let t of this._handle.keys())yield t}}d(f);const y=async({cache:t,path:e,data:a,type:r})=>{const s=e.startsWith("/")?e:`/${e}`;console.log("saveCache start",s,"data:",a);try{const e="dir"===r?JSON.stringify(a):a,n=new Response(e,{headers:{"x-type":r,"cache-control":"no-cache"}});await t.put(s,n)}finally{console.log("saveCache end",s,"data:",a)}},w=async(t,e)=>{const a=e.startsWith("/")?e:`/${e}`,r=await t.match(a);if(!r)return{type:null,data:null};const s=r.headers.get("x-type");try{if(!r.body)return{type:s,data:r.body};const t=await g(r.body);return{type:s,data:"dir"===s?JSON.parse(await t.text()):t}}catch(t){return console.error("Error processing cache data:",t),{type:null,data:null,error:t.message}}},g=async t=>{const e=t.getReader();let a=new Blob([]);for(;;){const{done:t,value:r}=await e.read();if(t)break;a=new Blob([a,r])}return a},m=new Map,v=async(t,e)=>{const a=(t=>{const e=t.split("/").filter(Boolean),a=[];let r="";for(const t of e.slice(0,-1))r+="/"+t,a.push(r);return a})(t),r=a.map((t=>m.get(t)||Promise.resolve()));await Promise.all(r);const s=(m.get(t)||Promise.resolve()).then((async()=>{try{return await e()}finally{m.get(t)===s&&m.delete(t)}}));return m.set(t,s),s};let b=null;globalThis.SharedWorker||(async()=>{b||(b=await caches.open("fs-cache"))})();let k=null,x=null,_=!1,S=[],$=0,E=new Map;const j=()=>{if(_)for(;S.length>0;){const t=S.shift();x.postMessage(t)}},B=(e,a)=>new Promise((async(r,s)=>{await(k?Promise.resolve():new Promise(((e,a)=>{try{k=new SharedWorker(new URL("./fs-worker.js",t&&"SCRIPT"===t.tagName.toUpperCase()&&t.src||new URL("dist.min.js",document.baseURI).href),{name:"fs-worker",type:"module"}),x=k.port,x.onmessage=t=>{const{id:a,result:r,error:s,success:n,type:i}=t.data;if("ready"===i)return _=!0,j(),void e();const c=E.get(a);if(c){if(n)c.resolve(r);else{const t=new Error(s.message);t.stack=s.stack,c.reject(t)}E.delete(a)}},x.onerror=t=>{console.error("Worker 错误:",t),a(t)},x.start()}catch(t){console.error("初始化 Worker 失败:",t),a(t)}})));const n=$++;E.set(n,{resolve:r,reject:s});const i={id:n,action:e,params:a};_?x.postMessage(i):S.push(i)})),W=async({cache:t,path:e,data:a,type:r})=>globalThis.SharedWorker?B("saveCache",{cacheName:t._name,path:e,data:a,type:r}):(async({cache:t,path:e,data:a,type:r})=>{const s=e.startsWith("/")?e:`/${e}`;return v(s,(async()=>{await y({cache:t,path:e,data:a,type:r})}))})({cache:t,path:e,data:a,type:r}),P=async(t,e)=>globalThis.SharedWorker?B("getCache",{cacheName:t._name,path:e}):(async(t,e)=>{const a=e.startsWith("/")?e:`/${e}`;return v(a,(async()=>await w(t,e)))})(t,e),T=async({cache:t,path:e,type:a})=>globalThis.SharedWorker?B("ensureCache",{cacheName:t._name,path:e,type:a}):(async({cache:t,path:e,type:a})=>{const r=e.startsWith("/")?e:`/${e}`;return v(r,(async()=>{const{type:e,data:s}=await w(t,r);if(e)return;let n=null;"dir"===a?n=[]:"file"===a&&(n=""),console.log(`新创建路径: ${r}, 类型: ${a}`),await y({type:a,cache:t,data:n,path:r})}))})({cache:t,path:e,type:a}),H=async({cache:t,path:e,remove:a,add:r})=>globalThis.SharedWorker?B("updateDir",{cacheName:t._name,path:e,remove:a,add:r}):(async({cache:t,path:e,remove:a,add:r})=>{const s=e.startsWith("/")?e:`/${e}`;return v(s,(async()=>{const{data:e}=await w(t,s);if(!e)throw new Error(`目录不存在: ${s}`);let n=Array.isArray(e)?[...e]:[];if(a&&a.length>0&&(n=n.filter((t=>!a.includes(t)))),r&&r.length>0){const t=r.filter((t=>!n.includes(t)));n=[...n,...t]}return await y({cache:t,path:s,type:"dir",data:n}),n}))})({cache:t,path:e,remove:a,add:r});class A extends e{#r=null;#s=null;constructor(t,e,a){const{parent:r,root:s}=a||{};super({parent:r,root:s}),this.#s=t,this.#r=e}async id(){return await i(this.path)}get _cache(){return this.#r}get name(){return this.#s}async isSame(t){return this.#r[Symbol.toStringTag]===t.#r[Symbol.toStringTag]&&this.path===t.path}async remove(){if("dir"===this.kind)for await(let t of this.values())await t.remove();const t=this.parent;await H({cache:this._cache,path:t.path,remove:[this.name]}),await this._cache.delete("/"+this.path),s({type:"remove",path:this.path})}}class N extends A{constructor(...t){super(...t),T({cache:this._cache,path:this.path,type:"file"})}async read(t={}){const{data:e}=await P(this._cache,this.path);if(!e)return"buffer"===t.type?new ArrayBuffer(0):"";const a=e instanceof Blob?e:new Blob([e]);switch(t.type){case"buffer":return await a.arrayBuffer();case"file":return a;default:return await a.text()}}async write(t,e={}){await W({cache:this._cache,path:this.path,type:"file",data:t}),s({path:this.path,type:"write",data:t,remark:e.remark})}}l(N);class R extends A{constructor(...t){super(...t),T({cache:this._cache,path:this.path,type:"dir"})}async get(t,e){const{create:a}=e||{};if(t.includes("/"))return await this._getByMultiPath(t,e);const r=`${this.path}/${t}`,{type:s}=await P(this._cache,r);let n=a||s;if(s)if(a){if(s!==a)throw new Error(`Type mismatch: ${r} is ${s}, not ${a}`)}else n=s;else if(!a)return null;let i=null;return await H({cache:this._cache,path:this.path,add:[t]}),"file"===n?i=new N(t,this._cache,{parent:this,root:this.root}):"dir"===n&&(i=new R(t,this._cache,{parent:this,root:this.root})),i}async length(){const{data:t}=await P(this._cache,this.path);return Array.isArray(t)?t.length:0}async*keys(){const{data:t}=await P(this._cache,this.path);if(Array.isArray(t))for(const e of t)yield e}}d(R);const C=async(t,e)=>c?(async(t,e)=>{const a=t.split("/").filter(Boolean);if(0===a.length)throw new Error("路径不能为空");const r=a[0];try{const t=await caches.open(r),s=new R(r,t);if(1===a.length)return s;const n=a.slice(1).join("/");return await s.get(n,e)}catch(t){if("NotFoundError"===t.name)throw new Error(`根目录 "${r}" 不存在，请先使用 init("${r}") 初始化`,{cause:t});throw t}})(t,e):(async(t,e)=>{const a=await navigator.storage.getDirectory(),r=t.split("/").filter(Boolean);if(0===r.length)throw new Error("路径不能为空");const s=r[0];try{const t=await a.getDirectoryHandle(s),n=new f(t);if(1===r.length)return n;const i=r.slice(1).join("/");return await n.get(i,e)}catch(t){if("NotFoundError"===t.name)throw new Error(`根目录 "${s}" 不存在，请先使用 init("${s}") 初始化`,{cause:t});throw t}})(t,e),O=t=>{switch(t){case"html":case"htm":case"txt":case"md":return"text/plain; charset=utf-8";case"js":case"mjs":return"application/javascript; charset=utf-8";case"json":return"application/json; charset=utf-8";case"css":return"text/css; charset=utf-8";case"xml":return"application/xml; charset=utf-8";case"svg":return"image/svg+xml; charset=utf-8";case"csv":return"text/csv; charset=utf-8";case"ics":return"text/calendar; charset=utf-8";case"pdf":return"application/pdf; charset=utf-8";case"doc":case"docx":return"application/msword; charset=utf-8";case"xls":case"xlsx":return"application/vnd.ms-excel; charset=utf-8";case"ppt":case"pptx":return"application/vnd.ms-powerpoint; charset=utf-8";case"zip":return"application/zip; charset=utf-8";case"gz":return"application/gzip; charset=utf-8";case"tar":return"application/x-tar; charset=utf-8";case"jpg":case"jpeg":return"image/jpeg";case"png":return"image/png";case"gif":return"image/gif";case"bmp":case"bmp":return"image/bmp";case"ico":return"image/x-icon";case"webp":return"image/webp";case"mp3":return"audio/mpeg";case"wav":return"audio/wav";case"mp4":case"m4v":return"video/mp4";case"mov":return"video/quicktime";case"avi":return"video/x-msvideo";default:return"application/octet-stream"}};self.addEventListener("fetch",(t=>{const{request:e}=t,{pathname:a,origin:r,searchParams:s}=new URL(e.url);location.origin===r&&/^\/\$/.test(a)&&(t=>{const{request:e}=t,{pathname:a,origin:r,searchParams:s}=new URL(e.url),n=a.split("/"),i=[n[1].replace("$",""),...n.slice(2)].join("/");t.respondWith((async()=>{try{const t=await C(i),e=a.split(".").pop(),r={};return r["Content-Type"]=O(e),new Response(await t.file(),{status:200,headers:r})}catch(t){return new Response(t.stack||t.toString(),{status:400})}})())})(t)})),self.addEventListener("install",(()=>{self.skipWaiting(),console.log("NoneOS installation successful")})),self.addEventListener("activate",(()=>{self.clients.claim(),console.log("NoneOS server activation successful")}))}();
