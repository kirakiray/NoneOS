!function(){"use strict";var t="undefined"!=typeof document?document.currentScript:null;class e{#t;#e;constructor(t){this.#t=t.parent,this.#e=t.root}get parent(){return this.#t}get root(){return this.#e||this}get path(){return this.parent?`${this.parent.path}/${this.name}`:this.name}async size(){if("file"===this.kind){return(await this.file()).size}return null}async copyTo(t,e){const[a,r]=await n(t,e,"copy",this);if("file"===this.kind){const t=await a.get(r,{create:"file"});return await t.write(await this.file()),t}const s=await a.get(r,{create:"dir"});for await(const[t,e]of this.entries())await e.copyTo(s,t);return s}async moveTo(t,e){const[a,r]=await n(t,e,"move",this);if("file"===this.kind){const t=await a.get(r,{create:"file"});return await t.write(await this.file()),await this.remove(),t}const s=await a.get(r,{create:"dir"});for await(const[t,e]of this.entries())await e.moveTo(s,t);return await this.remove(),s}toJSON(){return{name:this.name,path:this.path}}async observe(t){const e={func:t,handle:this};return r.add(e),()=>{r.delete(e)}}}const a=new BroadcastChannel("nonefs-system-handle-change");a.onmessage=t=>{s({...t.data},!0)};const r=new Set,s=({path:t,...e},s)=>{s||a.postMessage({path:t,...e}),r.forEach((a=>{t.includes(a.handle.path)&&a.func({path:t,...e})}))},n=async(t,e,a,r)=>{let s=t,n=e;if("string"==typeof t&&(n=t,s=r.parent),await r.isSame(s))return r;const i=s.path,c=r.path;if(i.startsWith(c+"/"))throw new Error(`Cannot ${a} a directory into its subdirectory`);return n=n||r.name,[s,n]};(()=>{const t=navigator.userAgent.toLowerCase();t.includes("safari")&&t.includes("chrome")})();let i=null,c=null,o=0;const h=new Map,p=()=>{if(i)return;const e=new URL("./worker.js",t&&"SCRIPT"===t.tagName.toUpperCase()&&t.src||new URL("dist.min.js",document.baseURI).href).href;i=new SharedWorker(e,{name:"cache-worker"}),c=i.port,c.start(),c.onmessage=t=>{const{id:e,result:a,error:r}=t.data,s=h.get(e);s&&(r?s.reject(new Error(r)):s.resolve(a),h.delete(e))}};p();const u=(t,e)=>(p(),new Promise(((a,r)=>{const s=o++;h.set(s,{resolve:a,reject:r}),c.postMessage({type:t,id:s,payload:e})}))),l=async(t,e)=>u("getCache",{cacheName:t.name,path:e}),f=async({cache:t,path:e,type:a})=>u("ensureCache",{cacheName:t.name,path:e,type:a}),d=async({cache:t,path:e,remove:a,add:r})=>u("updateDir",{cacheName:t.name,path:e,remove:a,add:r});class w extends e{#a=null;#r=null;constructor(t,e,a){const{parent:r,root:s}=a||{};super({parent:r,root:s}),this.#r=t,this.#a=e}async id(){return await(async t=>{if(globalThis.crypto){"string"==typeof t?t=(new TextEncoder).encode(t):t instanceof Blob&&(t=await t.arrayBuffer());const e=await crypto.subtle.digest("SHA-256",t);return Array.from(new Uint8Array(e)).map((t=>t.toString(16).padStart(2,"0"))).join("")}{const e=await import("crypto");"string"==typeof t?t=(new TextEncoder).encode(t):t instanceof Blob&&(t=await t.arrayBuffer());const a=e.createHash("sha256");return a.update(Buffer.from(t)),a.digest("hex")}})(this.path)}get _cache(){return this.#a}get name(){return this.#r}async isSame(t){return this.#a[Symbol.toStringTag]===t.#a[Symbol.toStringTag]&&this.path===t.path}async remove(){if("dir"===this.kind)for await(let t of this.values())await t.remove();const t=this.parent;await d({cache:this._cache,path:t.path,remove:[this.name]}),await this._cache.delete("/"+this.path),s({type:"remove",path:this.path})}}class y{async file(t){return this.read({...t,type:"file"})}async text(t){return this.read({...t,type:"text"})}async buffer(t){return this.read({...t,type:"buffer"})}async base64(t){const e=await this.file(t);return new Promise(((t,a)=>{const r=new FileReader;r.onload=()=>{t(r.result)},r.onerror=t=>{a(t)},r.readAsDataURL(e)}))}async lastModified(){return(await this.file()).lastModified}get kind(){return"file"}}class m extends w{constructor(...t){super(...t),f({cache:this._cache,path:this.path,type:"file"})}async read(t={}){const{data:e}=await l(this._cache,this.path);if(!e)return"buffer"===t.type?new ArrayBuffer(0):"";const a=e instanceof Blob?e:new Blob([e]);switch(t.type){case"buffer":return await a.arrayBuffer();case"file":return a;default:return await a.text()}}async write(t,e={}){await(async({cache:t,path:e,data:a,type:r})=>u("saveCache",{cacheName:t.name,path:e,data:a,type:r}))({cache:this._cache,path:this.path,type:"file",data:t}),s({path:this.path,type:"write",data:t,remark:e.remark})}}(async t=>{const e=Object.getOwnPropertyDescriptors(y.prototype);delete e.constructor,Object.defineProperties(t.prototype,e)})(m);class g{async _getByMultiPath(t,e){const{create:a}=e||{},r=t.split("/");let s=this;for(;r.length;){const t=r.shift();let e;a&&(e=r.length?"dir":a),s=await s.get(t,{create:e})}return s}async*entries(){for await(let t of this.keys()){const e=await this.get(t);yield[t,e]}}async*values(){for await(let[t,e]of this.entries())yield e}async some(t){for await(let[e,a]of this.entries())if(await t(a,e,this))break}async forEach(t){for await(let[e,a]of this.entries())await t(a,e,this)}async flat(){const t=[];for await(const[e,a]of this.entries())if("dir"!==a.kind)t.push(a);else{const e=await a.flat();t.push(...e)}return t}get kind(){return"dir"}}class v extends w{constructor(...t){super(...t),f({cache:this._cache,path:this.path,type:"dir"})}async get(t,e){const{create:a}=e||{};if(t.includes("/"))return await this._getByMultiPath(t,e);const r=`${this.path}/${t}`,{type:s}=await l(this._cache,r);let n=a||s;if(s)if(a){if(s!==a)throw new Error(`Type mismatch: ${r} is ${s}, not ${a}`)}else n=s;else if(!a)return null;let i=null;return await d({cache:this._cache,path:this.path,add:[t]}),"file"===n?i=new m(t,this._cache,{parent:this,root:this.root}):"dir"===n&&(i=new v(t,this._cache,{parent:this,root:this.root})),i}async length(){const{data:t}=await l(this._cache,this.path);return Array.isArray(t)?t.length:0}async*keys(){const{data:t}=await l(this._cache,this.path);if(Array.isArray(t))for(const e of t)yield e}}(async t=>{const e=Object.getOwnPropertyDescriptors(g.prototype);delete e.constructor,Object.defineProperties(t.prototype,e)})(v);const b=async(t,e)=>(async(t,e)=>{const a=t.split("/").filter(Boolean);if(0===a.length)throw new Error("路径不能为空");const r=a[0];try{const t=await caches.open(r),s=new v(r,t);if(1===a.length)return s;const n=a.slice(1).join("/");return await s.get(n,e)}catch(t){if("NotFoundError"===t.name)throw new Error(`根目录 "${r}" 不存在，请先使用 init("${r}") 初始化`,{cause:t});throw t}})(t,e),x=t=>{switch(t){case"html":case"htm":case"txt":case"md":return"text/plain; charset=utf-8";case"js":case"mjs":return"application/javascript; charset=utf-8";case"json":return"application/json; charset=utf-8";case"css":return"text/css; charset=utf-8";case"xml":return"application/xml; charset=utf-8";case"svg":return"image/svg+xml; charset=utf-8";case"csv":return"text/csv; charset=utf-8";case"ics":return"text/calendar; charset=utf-8";case"pdf":return"application/pdf; charset=utf-8";case"doc":case"docx":return"application/msword; charset=utf-8";case"xls":case"xlsx":return"application/vnd.ms-excel; charset=utf-8";case"ppt":case"pptx":return"application/vnd.ms-powerpoint; charset=utf-8";case"zip":return"application/zip; charset=utf-8";case"gz":return"application/gzip; charset=utf-8";case"tar":return"application/x-tar; charset=utf-8";case"jpg":case"jpeg":return"image/jpeg";case"png":return"image/png";case"gif":return"image/gif";case"bmp":case"bmp":return"image/bmp";case"ico":return"image/x-icon";case"webp":return"image/webp";case"mp3":return"audio/mpeg";case"wav":return"audio/wav";case"mp4":case"m4v":return"video/mp4";case"mov":return"video/quicktime";case"avi":return"video/x-msvideo";default:return"application/octet-stream"}};self.addEventListener("fetch",(t=>{const{request:e}=t,{pathname:a,origin:r,searchParams:s}=new URL(e.url);location.origin===r&&/^\/\$/.test(a)&&(t=>{const{request:e}=t,{pathname:a,origin:r,searchParams:s}=new URL(e.url),n=a.split("/"),i=[n[1].replace("$",""),...n.slice(2)].join("/");t.respondWith((async()=>{try{const t=await b(i),e=a.split(".").pop(),r={};return r["Content-Type"]=x(e),new Response(await t.file(),{status:200,headers:r})}catch(t){return new Response(t.stack||t.toString(),{status:400})}})())})(t)})),self.addEventListener("install",(()=>{self.skipWaiting(),console.log("NoneOS installation successful")})),self.addEventListener("activate",(()=>{self.clients.claim(),console.log("NoneOS server activation successful")}))}();
